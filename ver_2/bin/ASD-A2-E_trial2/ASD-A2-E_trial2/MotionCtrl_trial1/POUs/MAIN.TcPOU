<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="MAIN" Id="{31b0bc00-96e9-4e64-af9b-c5575f64f6fc}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR CONSTANT	
	Axis_Count : INT := 4 ;
END_VAR
VAR
	power : BOOL;
	Index : INT := 1;
	
	AxisList : ARRAY[1..Axis_Count] OF AXIS_REF;
	
	Axis_State:  ARRAY[1..Axis_Count] OF INT;
	Axis_Power : ARRAY[1..Axis_Count] OF MC_Power;
	Axis_Reset : ARRAY[1..Axis_Count] OF MC_Reset;
	Axis_Home : ARRAY[1..Axis_Count] OF MC_Home;
	Axis_MoveAbs : ARRAY[1..Axis_Count] OF ARRAY[0..1] OF MC_MoveAbsolute;
	Axis_ErrorID : ARRAY[1..Axis_Count] OF UDINT;
	absSwitch : ARRAY[1..Axis_Count] OF INT;
	
	bHomeSwitch : ARRAY[1..Axis_Count] OF BOOL;
	startMove : ARRAY[1..Axis_Count] OF BOOL;
	homeBusy : ARRAY[1..Axis_Count] OF BOOL; // check if home function block is busy
	actPos : ARRAY[1..Axis_Count] OF LREAL; // array of actual position of each axis
	
	Axis_GoalPos : LREAL;
	
	rMoveVelocity : LREAL := 1600;//42666;
	rMoveAcceleration : LREAL := 12000;//120000;
	rMoveDecceleration : LREAL := 12000;//120000;
	rMoveJerk : LREAL := 560000;
	
	iCycleNum : DINT := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[iCycleNum := iCycleNum + 1;
FOR Index := 1 TO Axis_Count BY 1 DO
	AxisList[Index].ReadStatus();
	Axis_Power[Index](Axis:=AxisList[Index], Enable:=power, Enable_Positive:=TRUE, Enable_Negative:=TRUE);
	IF power THEN
		homeBusy[Index] := Axis_Home[Index].Busy;
		actPos[Index] := AxisList[Index].NcToPlc.ActPos;
		Axis_MoveAbs[Index][0](Axis:=AxisList[Index], Execute:=FALSE);
		Axis_MoveAbs[Index][1](Axis:=AxisList[Index], Execute:=FALSE);
		CASE Axis_State[Index] OF
			0: // Initial
				Axis_Reset[Index](Axis:=AxisList[Index], Execute := FALSE);
				absSwitch[Index] := 0;
				Axis_State[Index] := 10;
			10: // Start Drive Reset
				Axis_Reset[Index](Axis:=AxisList[Index], Execute := TRUE); 
				IF Axis_Reset[Index].Done THEN
					Axis_State[Index] := 20;
				ELSIF Axis_Reset[Index].Error THEN
					Axis_ErrorID[Index] := Axis_Reset[Index].ErrorID;
					Axis_State[Index] := 997;
				END_IF
			20: // Wait for Drive to Reset
				IF Axis_Power[Index].Status THEN
					Axis_State[Index] := 30;
				//ELSE
				//	Axis_State[Index] := 996;
				//	Axis_ErrorID[Index] := Axis_Power[Index].ErrorID;
				END_IF
			30: // Set current position / Homing
				IF bHomeSwitch[Index] THEN
					Axis_Home[Index](Axis:=AxisList[Index], HomingMode:=MC_HomingMode.MC_Direct, Position:=Axis_GoalPos, Execute:=TRUE);
					IF Axis_Home[Index].Error THEN
						Axis_State[Index] := 998;
					END_IF
					IF Axis_Home[Index].Done THEN
						Axis_Home[Index](Axis:=AxisList[Index], Execute:=FALSE);
						bHomeSwitch[Index] := FALSE;
					END_IF 
				ELSIF startMove[Index] THEN
					startMove[Index] := FALSE;
					Axis_State[Index] := 40;
				END_IF
			40: // Start Absolute Move
				IF Axis_MoveAbs[Index][absSwitch[Index]].Busy THEN
					absSwitch[Index] := (absSwitch[Index] + 1) MOD 2;
				END_IF
				Axis_MoveAbs[Index][absSwitch[Index]](Axis:=AxisList[Index], Position := Axis_GoalPos, BufferMode := MC_Aborting, Velocity := rMoveVelocity,
							Acceleration := rMoveAcceleration, Deceleration := rMoveDecceleration, Jerk := rMoveJerk, Execute := TRUE);
				IF Axis_MoveAbs[Index][absSwitch[Index]].Error THEN //Axis_MoveAbs.Done AND 
					Axis_State[Index] := 999;
				END_IF
				Axis_State[Index] := 30;
			
			999: //Error Fixing (TODO)
		END_CASE
	END_IF
END_FOR
]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="63" Count="0" />
      <LineId Id="781" Count="0" />
      <LineId Id="966" Count="0" />
      <LineId Id="785" Count="0" />
      <LineId Id="1184" Count="0" />
      <LineId Id="1151" Count="1" />
      <LineId Id="1113" Count="1" />
      <LineId Id="30" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="971" Count="0" />
      <LineId Id="1004" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="35" Count="0" />
      <LineId Id="872" Count="0" />
      <LineId Id="52" Count="1" />
      <LineId Id="55" Count="0" />
      <LineId Id="1221" Count="0" />
      <LineId Id="56" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="37" Count="1" />
      <LineId Id="58" Count="0" />
      <LineId Id="1222" Count="0" />
      <LineId Id="1224" Count="0" />
      <LineId Id="1223" Count="0" />
      <LineId Id="881" Count="0" />
      <LineId Id="342" Count="0" />
      <LineId Id="980" Count="0" />
      <LineId Id="1093" Count="0" />
      <LineId Id="1098" Count="0" />
      <LineId Id="1100" Count="0" />
      <LineId Id="1097" Count="0" />
      <LineId Id="984" Count="0" />
      <LineId Id="1115" Count="0" />
      <LineId Id="1101" Count="0" />
      <LineId Id="978" Count="0" />
      <LineId Id="986" Count="0" />
      <LineId Id="1089" Count="0" />
      <LineId Id="988" Count="0" />
      <LineId Id="993" Count="0" />
      <LineId Id="278" Count="0" />
      <LineId Id="710" Count="0" />
      <LineId Id="1009" Count="0" />
      <LineId Id="1019" Count="1" />
      <LineId Id="1046" Count="1" />
      <LineId Id="1052" Count="0" />
      <LineId Id="1021" Count="0" />
      <LineId Id="1040" Count="0" />
      <LineId Id="300" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="1188" Count="0" />
      <LineId Id="968" Count="0" />
      <LineId Id="875" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>